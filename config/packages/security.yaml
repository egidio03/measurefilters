security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
            logout:
                path: /logout
                target: app_login
        
    #ROLE_ADMIN is the role granted to the user who can create, read, update and delete the users
    #ROLE_USER is the role granted to the user who has access to the user panel only
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

    access_control:
         - { path: ^/home, roles: [IS_AUTHENTICATED_SUCCESSFULLY, ROLE_USER] }
         - { path: ^/filter/*, roles: [IS_AUTHENTICATED_SUCCESSFULLY, ROLE_USER] }
         - { path: ^/user/*, roles: [IS_AUTHENTICATED_SUCCESSFULLY, ROLE_ADMIN] }
         - { path: ^/login, roles: PUBLIC_ACCESS }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
